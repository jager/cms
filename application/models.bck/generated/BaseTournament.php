<?php

/**
 * BaseTournament
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $tname
 * @property string $kind
 * @property date $start_date
 * @property time $start_time
 * @property string $city
 * @property string $zip
 * @property string $street
 * @property string $rank
 * @property integer $max_team_no
 * @property date $start_enroll
 * @property date $end_enroll
 * @property float $latitude
 * @property string $longitude
 * @property Doctrine_Collection $Teams
 * @property Doctrine_Collection $Ranks
 * @property Doctrine_Collection $Galery
 * @property Doctrine_Collection $Fotos
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTournament extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Tournaments');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('tname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('kind', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'male',
             'length' => '6',
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('start_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('zip', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             ));
        $this->hasColumn('street', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('rank', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('max_team_no', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('start_enroll', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('end_enroll', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('longitude', 'string', 45, array(
             'type' => 'string',
             'length' => '45',
             ));

        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Team as Teams', array(
             'local' => 'id',
             'foreign' => 'Tournaments_id'));

        $this->hasMany('Rank as Ranks', array(
             'local' => 'id',
             'foreign' => 'Tournaments_id'));

        $this->hasMany('Galery', array(
             'local' => 'id',
             'foreign' => 'tournament_id'));

        $this->hasMany('Foto as Fotos', array(
             'local' => 'id',
             'foreign' => 'Tournaments_id'));
    }
}