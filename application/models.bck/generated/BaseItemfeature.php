<?php

/**
 * BaseItemfeature
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $intvalue
 * @property string $charvalue
 * @property clob $textvalue
 * @property date $datevalue
 * @property integer $Catsettings_id
 * @property integer $Items_id
 * @property timestamp $added
 * @property timestamp $edited
 * @property Catsetting $Catsetting
 * @property Item $Item
 * @property Doctrine_Collection $Itemhistories
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseItemfeature extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Itemfeatures');
        $this->hasColumn('intvalue', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('charvalue', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('textvalue', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('datevalue', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('Catsettings_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('Items_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('added', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('edited', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Catsetting', array(
             'local' => 'Catsettings_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('Item', array(
             'local' => 'Items_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasMany('Itemhistory as Itemhistories', array(
             'local' => 'Catsettings_id',
             'foreign' => 'Itemfeatures_Catsettings_id'));
    }
}