<?php

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $pname
 * @property string $link
 * @property string $hd_title
 * @property clob $hd_keywords
 * @property clob $content
 * @property timestamp $created
 * @property timestamp $edited
 * @property string $active
 * @property string $owner
 * @property Doctrine_Collection $Pageshistories
 * @property Doctrine_Collection $Menus
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePage extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Pages');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('pname', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('link', 'string', 120, array(
             'type' => 'string',
             'length' => '120',
             ));
        $this->hasColumn('hd_title', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('hd_keywords', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('content', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('created', 'timestamp', null, array(
             'type' => 'timestamp',
             'default' => 'systimestamp',
             ));
        $this->hasColumn('edited', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '1',
             ));
        $this->hasColumn('owner', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));

        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Pageshistory as Pageshistories', array(
             'local' => 'id',
             'foreign' => 'Pages_id'));

        $this->hasMany('Menu as Menus', array(
             'local' => 'id',
             'foreign' => 'Pages_id'));
    }
}