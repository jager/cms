<?php

/**
 * BaseAktual
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property clob $shortcontent
 * @property clob $fullcontent
 * @property clob $tags
 * @property timestamp $created
 * @property timestamp $edited
 * @property string $active
 * @property string $link
 * @property timestamp $published
 * @property Doctrine_Collection $AktualsLabels
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAktual extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Aktuals');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('shortcontent', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('fullcontent', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('tags', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('created', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('edited', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '1',
             ));
        $this->hasColumn('link', 'string', 160, array(
             'type' => 'string',
             'length' => '160',
             ));
        $this->hasColumn('published', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AktualsLabel as AktualsLabels', array(
             'local' => 'id',
             'foreign' => 'Aktuals_id'));
    }
}