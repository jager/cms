<?php

/**
 * BaseAktual
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property string $filename
 * @property clob $fileinfo
 * @property string $filebasename
 * @property string $mime
 * @property timestamp $added
 * @property string $active
 * @property integer $owner
 * @property string $sharetype
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseFile extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Files');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('filename', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('fileinfo', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('filebasename', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('mime', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('added', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '1',
             ));
        $this->hasColumn('owner', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('sharetype', 'string', 7, array(
             'type' => 'string',
             'length' => '7',
             'default' => 'PRIVATE'
             ));

        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp() {
        parent::setUp();
    }
}