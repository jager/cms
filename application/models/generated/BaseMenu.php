<?php

/**
 * BaseMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $mname
 * @property string $type
 * @property string $link
 * @property integer $parent_id
 * @property string $active
 * @property integer $Pages_id
 * @property Page $Page
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseMenu extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Menus');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('mname', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('type', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('link', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '1',
             ));
        $this->hasColumn('Pages_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '4',
             ));

        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page', array(
             'local' => 'Pages_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}